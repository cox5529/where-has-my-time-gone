// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Quacker.API.Infrastructure.Persistence;
using WhereHasMyTimeGone.API.Infrastructure.Persistence;

#nullable disable

namespace Quacker.API.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220527230141_ReworkPermissions")]
    partial class ReworkPermissions
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Quacker.API.Domain.Entities.Flock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Flock");
                });

            modelBuilder.Entity("Quacker.API.Domain.Entities.Quack", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("FlockId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FlockId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Quack");
                });

            modelBuilder.Entity("Quacker.API.Domain.Entities.UserProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<bool>("Disabled")
                        .HasColumnType("boolean");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int>("Followers")
                        .HasColumnType("integer");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<string>("NormalizedDisplayName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("ProfileImageKey")
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedDisplayName");

                    b.HasIndex("UserId");

                    b.ToTable("UserProfile");
                });

            modelBuilder.Entity("Quacker.API.Domain.Entities.UserProfileFlock", b =>
                {
                    b.Property<Guid>("FlockId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserProfileId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Owner")
                        .HasColumnType("boolean");

                    b.Property<bool>("Post")
                        .HasColumnType("boolean");

                    b.Property<bool>("Read")
                        .HasColumnType("boolean");

                    b.HasKey("FlockId", "UserProfileId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("UserProfileFlock");
                });

            modelBuilder.Entity("Quacker.API.Domain.Entities.Quack", b =>
                {
                    b.HasOne("Quacker.API.Domain.Entities.Flock", "Flock")
                        .WithMany("Quacks")
                        .HasForeignKey("FlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Quacker.API.Domain.Entities.UserProfile", "Owner")
                        .WithMany("Quacks")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flock");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Quacker.API.Domain.Entities.UserProfileFlock", b =>
                {
                    b.HasOne("Quacker.API.Domain.Entities.Flock", "Flock")
                        .WithMany("UserPermissions")
                        .HasForeignKey("FlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Quacker.API.Domain.Entities.UserProfile", "UserProfile")
                        .WithMany("FlockPermissions")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flock");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("Quacker.API.Domain.Entities.Flock", b =>
                {
                    b.Navigation("Quacks");

                    b.Navigation("UserPermissions");
                });

            modelBuilder.Entity("Quacker.API.Domain.Entities.UserProfile", b =>
                {
                    b.Navigation("FlockPermissions");

                    b.Navigation("Quacks");
                });
#pragma warning restore 612, 618
        }
    }
}
